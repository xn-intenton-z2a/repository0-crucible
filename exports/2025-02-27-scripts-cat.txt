./scripts/truncate-git-history.sh
==== Content of ./scripts/truncate-git-history.sh ====
#!/usr/bin/env bash
# scripts/truncate-git-history.sh
# Purpose: Truncate the history so that future revisions don't follow a past trend.
# Usage: ./scripts/truncate-git-history.sh
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT
#
git checkout --orphan temp-branch
git add --verbose --all
git commit --verbose --message "Prepare release"
git push --verbose --force origin temp-branch:main
git checkout main
git pull --verbose
git branch --verbose --delete temp-branch
git pull --verbose
git push --verbose origin main
git log
git status
./scripts/archive.sh
==== Content of ./scripts/archive.sh ====
#!/usr/bin/env bash
# scripts/archive.sh
# Usage: ./scripts/archive.sh
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

intention="$(head -1 CONTRIBUTING.md | sed 's/^# //')"
cp -fv CONTRIBUTING.md "archive/${intention?}-$(date +%Y-%m-%d)-CONTRIBUTING.md"
cp -fv README.md "archive/${intention?}-$(date +%Y-%m-%d)-README.md"
cp -fv package.json "archive/${intention?}-$(date +%Y-%m-%d)-package.json"
cp -fv src/lib/main.js "archive/${intention?}-$(date +%Y-%m-%d)-main.js"
cp -fv tests/unit/main.test.js "archive/${intention?}-$(date +%Y-%m-%d)-main.test.js"
#rm -rfv node_modules
#rm -rfv package-lock.json
#npm install
#npm run build
#npm link
./scripts/export-source.sh
==== Content of ./scripts/export-source.sh ====
#!/usr/bin/env bash
# scripts/export-source.sh
# Purpose: Export the source code to date stamped files.
# Usage: ./scripts/export-source.sh
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT
#

mkdir -p './exports/'
find "." -type f -not -path '*/build/*' -not -path '*/dist/*' -not -path '*/exports/*' -not -path '*/coverage/*' -not -path '*/node_modules/*' -not -path '*/\.git/*' -not -path '*/\.idea/*' -print | grep -v '.DS_Store' > "./exports/$(date +%Y-%m-%d)-files-list.txt"
find "." -maxdepth 1 -type f -name '*.md' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name 'package.json' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; >> "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name 'vitest.config.js' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; >> "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name 'jsconfig.json' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; >> "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name 'eslint.config.js' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; >> "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name '.prettierrc' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; >> "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "." -maxdepth 1 -type f -name 'LICENSE' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-root-cat.txt"
find "./src" -type f -name '*.js' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-src-cat.txt"
find "./tests" -type f -name '*.js' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-test-cat.txt"
find "./.github" -type f -name '*.yml' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-github-workflow-cat.txt"
find "./scripts" -type f -name '*.sh' -print -exec echo "==== Content of {} ====" \; -exec cat {} \; > "./exports/$(date +%Y-%m-%d)-scripts-cat.txt"
git log --follow -p src/lib/main.js > "./exports/$(date +%Y-%m-%d)-main.js-history.txt"
git log --since="12 hours ago" --follow -p src/lib/main.js > "./exports/$(date +%Y-%m-%d)-main.js-history-last-12-hours.txt"
./scripts/initialise.sh
==== Content of ./scripts/initialise.sh ====
#!/usr/bin/env bash
# scripts/initialise.sh
# Usage: ./scripts/initialise.sh <intention>
# Example: ./scripts/initialise.sh (randomly selects an intention)
# Example: ./scripts/initialise.sh "plot-code-lib"
# Example: ./scripts/initialise.sh "owl-builder"
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

defaultIntention=$(find seeds -maxdepth 1 -type f -name 'CONTRIBUTING-*.md' | shuf -n 1 | sed -E 's/.*CONTRIBUTING-(.*)\.md/\1/')

intention="${1-$defaultIntention}"

cp -fv "seeds/CONTRIBUTING-${intention?}.md" CONTRIBUTING.md
cp -fv "seeds/zero-README.md"  README.md
cp -fv "seeds/zero-package.json"  package.json
cp -fv "seeds/zero-main.js" src/lib/main.js
cp -fv "seeds/zero-main.test.js" tests/unit/main.test.js
#rm -rfv node_modules
#rm -rfv package-lock.json
#npm install
#npm run build
#npm link
./scripts/update.sh
==== Content of ./scripts/update.sh ====
#!/usr/bin/env bash
# scripts/update.sh
# Usage: ./scripts/update.sh
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT
#

rm -f package-lock.json
rm -f node-modules
npm install
npm run update-to-minor
npm update
npm upgrade
npm install
npm run build
npm link
./scripts/clean.sh
==== Content of ./scripts/clean.sh ====
#!/usr/bin/env bash
# scripts/clean.sh
# Usage: ./scripts/clean.sh
#
# This file is part of the Example Suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT
#

rm -rfv ./build \
rm -rfv ./coverage \
rm -rfv ./dist
rm -rfv ./node_modules
rm -rfv ./package-lock.json
npm install
npm run build
npm link
